{"ast":null,"code":"// Utility functions for time formatting and relative time calculation\nexport const getRelativeTime=timestamp=>{const now=new Date();const past=new Date(timestamp);const diffInMs=now-past;const diffInMinutes=Math.floor(diffInMs/(1000*60));const diffInHours=Math.floor(diffInMs/(1000*60*60));const diffInDays=Math.floor(diffInMs/(1000*60*60*24));if(diffInMinutes<1){return'just now';}else if(diffInMinutes===1){return'1 minute ago';}else if(diffInMinutes<60){return`${diffInMinutes} minutes ago`;}else if(diffInHours===1){return'1 hour ago';}else if(diffInHours<24){return`${diffInHours} hours ago`;}else if(diffInDays===1){return'1 day ago';}else if(diffInDays<7){return`${diffInDays} days ago`;}else{const weeks=Math.floor(diffInDays/7);return weeks===1?'1 week ago':`${weeks} weeks ago`;}};export const formatDateTime=timestamp=>{return new Date(timestamp).toLocaleString();};export const formatDateTimeWithRelative=timestamp=>{const formatted=formatDateTime(timestamp);const relative=getRelativeTime(timestamp);return`${formatted}, ${relative}`;};","map":{"version":3,"names":["getRelativeTime","timestamp","now","Date","past","diffInMs","diffInMinutes","Math","floor","diffInHours","diffInDays","weeks","formatDateTime","toLocaleString","formatDateTimeWithRelative","formatted","relative"],"sources":["/Users/jwono/Downloads/snowping-pwa/src/utils/timeUtils.js"],"sourcesContent":["// Utility functions for time formatting and relative time calculation\n\nexport const getRelativeTime = (timestamp) => {\n  const now = new Date()\n  const past = new Date(timestamp)\n  const diffInMs = now - past\n  const diffInMinutes = Math.floor(diffInMs / (1000 * 60))\n  const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60))\n  const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24))\n\n  if (diffInMinutes < 1) {\n    return 'just now'\n  } else if (diffInMinutes === 1) {\n    return '1 minute ago'\n  } else if (diffInMinutes < 60) {\n    return `${diffInMinutes} minutes ago`\n  } else if (diffInHours === 1) {\n    return '1 hour ago'\n  } else if (diffInHours < 24) {\n    return `${diffInHours} hours ago`\n  } else if (diffInDays === 1) {\n    return '1 day ago'\n  } else if (diffInDays < 7) {\n    return `${diffInDays} days ago`\n  } else {\n    const weeks = Math.floor(diffInDays / 7)\n    return weeks === 1 ? '1 week ago' : `${weeks} weeks ago`\n  }\n}\n\nexport const formatDateTime = (timestamp) => {\n  return new Date(timestamp).toLocaleString()\n}\n\nexport const formatDateTimeWithRelative = (timestamp) => {\n  const formatted = formatDateTime(timestamp)\n  const relative = getRelativeTime(timestamp)\n  return `${formatted}, ${relative}`\n}"],"mappings":"AAAA;AAEA,MAAO,MAAM,CAAAA,eAAe,CAAIC,SAAS,EAAK,CAC5C,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAD,IAAI,CAACF,SAAS,CAAC,CAChC,KAAM,CAAAI,QAAQ,CAAGH,GAAG,CAAGE,IAAI,CAC3B,KAAM,CAAAE,aAAa,CAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,EAAI,IAAI,CAAG,EAAE,CAAC,CAAC,CACxD,KAAM,CAAAI,WAAW,CAAGF,IAAI,CAACC,KAAK,CAACH,QAAQ,EAAI,IAAI,CAAG,EAAE,CAAG,EAAE,CAAC,CAAC,CAC3D,KAAM,CAAAK,UAAU,CAAGH,IAAI,CAACC,KAAK,CAACH,QAAQ,EAAI,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAC,CAAC,CAE/D,GAAIC,aAAa,CAAG,CAAC,CAAE,CACrB,MAAO,UAAU,CACnB,CAAC,IAAM,IAAIA,aAAa,GAAK,CAAC,CAAE,CAC9B,MAAO,cAAc,CACvB,CAAC,IAAM,IAAIA,aAAa,CAAG,EAAE,CAAE,CAC7B,MAAO,GAAGA,aAAa,cAAc,CACvC,CAAC,IAAM,IAAIG,WAAW,GAAK,CAAC,CAAE,CAC5B,MAAO,YAAY,CACrB,CAAC,IAAM,IAAIA,WAAW,CAAG,EAAE,CAAE,CAC3B,MAAO,GAAGA,WAAW,YAAY,CACnC,CAAC,IAAM,IAAIC,UAAU,GAAK,CAAC,CAAE,CAC3B,MAAO,WAAW,CACpB,CAAC,IAAM,IAAIA,UAAU,CAAG,CAAC,CAAE,CACzB,MAAO,GAAGA,UAAU,WAAW,CACjC,CAAC,IAAM,CACL,KAAM,CAAAC,KAAK,CAAGJ,IAAI,CAACC,KAAK,CAACE,UAAU,CAAG,CAAC,CAAC,CACxC,MAAO,CAAAC,KAAK,GAAK,CAAC,CAAG,YAAY,CAAG,GAAGA,KAAK,YAAY,CAC1D,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,cAAc,CAAIX,SAAS,EAAK,CAC3C,MAAO,IAAI,CAAAE,IAAI,CAACF,SAAS,CAAC,CAACY,cAAc,CAAC,CAAC,CAC7C,CAAC,CAED,MAAO,MAAM,CAAAC,0BAA0B,CAAIb,SAAS,EAAK,CACvD,KAAM,CAAAc,SAAS,CAAGH,cAAc,CAACX,SAAS,CAAC,CAC3C,KAAM,CAAAe,QAAQ,CAAGhB,eAAe,CAACC,SAAS,CAAC,CAC3C,MAAO,GAAGc,SAAS,KAAKC,QAAQ,EAAE,CACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}