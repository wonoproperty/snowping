{"ast":null,"code":"// Utility functions for time formatting and relative time calculation\n\nexport const getRelativeTime = timestamp => {\n  const now = new Date();\n  const past = new Date(timestamp);\n  const diffInMs = now - past;\n  const diffInMinutes = Math.floor(diffInMs / (1000 * 60));\n  const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60));\n  const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24));\n  if (diffInMinutes < 1) {\n    return 'just now';\n  } else if (diffInMinutes === 1) {\n    return '1 minute ago';\n  } else if (diffInMinutes < 60) {\n    return `${diffInMinutes} minutes ago`;\n  } else if (diffInHours === 1) {\n    return '1 hour ago';\n  } else if (diffInHours < 24) {\n    return `${diffInHours} hours ago`;\n  } else if (diffInDays === 1) {\n    return '1 day ago';\n  } else if (diffInDays < 7) {\n    return `${diffInDays} days ago`;\n  } else {\n    const weeks = Math.floor(diffInDays / 7);\n    return weeks === 1 ? '1 week ago' : `${weeks} weeks ago`;\n  }\n};\nexport const formatDateTime = timestamp => {\n  return new Date(timestamp).toLocaleString();\n};\nexport const formatDateTimeWithRelative = timestamp => {\n  const formatted = formatDateTime(timestamp);\n  const relative = getRelativeTime(timestamp);\n  return `${formatted}, ${relative}`;\n};","map":{"version":3,"names":["getRelativeTime","timestamp","now","Date","past","diffInMs","diffInMinutes","Math","floor","diffInHours","diffInDays","weeks","formatDateTime","toLocaleString","formatDateTimeWithRelative","formatted","relative"],"sources":["/Users/jwono/Downloads/snowping-pwa/src/utils/timeUtils.js"],"sourcesContent":["// Utility functions for time formatting and relative time calculation\n\nexport const getRelativeTime = (timestamp) => {\n  const now = new Date()\n  const past = new Date(timestamp)\n  const diffInMs = now - past\n  const diffInMinutes = Math.floor(diffInMs / (1000 * 60))\n  const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60))\n  const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24))\n\n  if (diffInMinutes < 1) {\n    return 'just now'\n  } else if (diffInMinutes === 1) {\n    return '1 minute ago'\n  } else if (diffInMinutes < 60) {\n    return `${diffInMinutes} minutes ago`\n  } else if (diffInHours === 1) {\n    return '1 hour ago'\n  } else if (diffInHours < 24) {\n    return `${diffInHours} hours ago`\n  } else if (diffInDays === 1) {\n    return '1 day ago'\n  } else if (diffInDays < 7) {\n    return `${diffInDays} days ago`\n  } else {\n    const weeks = Math.floor(diffInDays / 7)\n    return weeks === 1 ? '1 week ago' : `${weeks} weeks ago`\n  }\n}\n\nexport const formatDateTime = (timestamp) => {\n  return new Date(timestamp).toLocaleString()\n}\n\nexport const formatDateTimeWithRelative = (timestamp) => {\n  const formatted = formatDateTime(timestamp)\n  const relative = getRelativeTime(timestamp)\n  return `${formatted}, ${relative}`\n}"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,eAAe,GAAIC,SAAS,IAAK;EAC5C,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,IAAI,GAAG,IAAID,IAAI,CAACF,SAAS,CAAC;EAChC,MAAMI,QAAQ,GAAGH,GAAG,GAAGE,IAAI;EAC3B,MAAME,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC;EACxD,MAAMI,WAAW,GAAGF,IAAI,CAACC,KAAK,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAC3D,MAAMK,UAAU,GAAGH,IAAI,CAACC,KAAK,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAE/D,IAAIC,aAAa,GAAG,CAAC,EAAE;IACrB,OAAO,UAAU;EACnB,CAAC,MAAM,IAAIA,aAAa,KAAK,CAAC,EAAE;IAC9B,OAAO,cAAc;EACvB,CAAC,MAAM,IAAIA,aAAa,GAAG,EAAE,EAAE;IAC7B,OAAO,GAAGA,aAAa,cAAc;EACvC,CAAC,MAAM,IAAIG,WAAW,KAAK,CAAC,EAAE;IAC5B,OAAO,YAAY;EACrB,CAAC,MAAM,IAAIA,WAAW,GAAG,EAAE,EAAE;IAC3B,OAAO,GAAGA,WAAW,YAAY;EACnC,CAAC,MAAM,IAAIC,UAAU,KAAK,CAAC,EAAE;IAC3B,OAAO,WAAW;EACpB,CAAC,MAAM,IAAIA,UAAU,GAAG,CAAC,EAAE;IACzB,OAAO,GAAGA,UAAU,WAAW;EACjC,CAAC,MAAM;IACL,MAAMC,KAAK,GAAGJ,IAAI,CAACC,KAAK,CAACE,UAAU,GAAG,CAAC,CAAC;IACxC,OAAOC,KAAK,KAAK,CAAC,GAAG,YAAY,GAAG,GAAGA,KAAK,YAAY;EAC1D;AACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIX,SAAS,IAAK;EAC3C,OAAO,IAAIE,IAAI,CAACF,SAAS,CAAC,CAACY,cAAc,CAAC,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMC,0BAA0B,GAAIb,SAAS,IAAK;EACvD,MAAMc,SAAS,GAAGH,cAAc,CAACX,SAAS,CAAC;EAC3C,MAAMe,QAAQ,GAAGhB,eAAe,CAACC,SAAS,CAAC;EAC3C,OAAO,GAAGc,SAAS,KAAKC,QAAQ,EAAE;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}