{"ast":null,"code":"var _jsxFileName = \"/Users/jwono/Downloads/snowping-pwa/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport GroupCodeInput from './components/GroupCodeInput';\nimport PingControls from './components/PingControls';\nimport MapComponent from './components/MapComponent';\nimport { supabase } from './supabaseClient';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [groupCode, setGroupCode] = useState(null);\n  const [pings, setPings] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Load saved group code on app start\n  useEffect(() => {\n    const savedGroupCode = localStorage.getItem('snowping_group_code');\n    if (savedGroupCode) {\n      setGroupCode(savedGroupCode);\n    }\n  }, []);\n\n  // Load pings when group code changes\n  useEffect(() => {\n    if (groupCode) {\n      loadPings();\n      syncOfflinePings();\n    }\n  }, [groupCode]);\n  const loadPings = useCallback(async () => {\n    if (!groupCode) return;\n    setIsLoading(true);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('pings').select('*').eq('group_code', groupCode).order('timestamp', {\n        ascending: false\n      }).limit(50);\n      if (error) {\n        console.error('Error loading pings:', error);\n        return;\n      }\n      setPings(data || []);\n    } catch (error) {\n      console.error('Error loading pings:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [groupCode]);\n  const handleGroupSet = newGroupCode => {\n    setGroupCode(newGroupCode);\n    localStorage.setItem('snowping_group_code', newGroupCode);\n  };\n  const handleLeaveGroup = () => {\n    setGroupCode(null);\n    setPings([]);\n    localStorage.removeItem('snowping_group_code');\n  };\n  const handlePing = async ping => {\n    try {\n      const {\n        error\n      } = await supabase.from('pings').insert([ping]);\n      if (error) {\n        console.error('Insert error:', error);\n        saveOfflinePing(ping);\n        alert('No connection. Ping saved locally and will sync when online.');\n        return;\n      }\n\n      // Refresh pings after successful insert\n      loadPings();\n      alert('Ping sent successfully!');\n    } catch (error) {\n      console.error('Ping error:', error);\n      saveOfflinePing(ping);\n      alert('No connection. Ping saved locally and will sync when online.');\n    }\n  };\n  const saveOfflinePing = ping => {\n    const offlinePings = JSON.parse(localStorage.getItem('offlinePings') || '[]');\n    offlinePings.push(ping);\n    localStorage.setItem('offlinePings', JSON.stringify(offlinePings));\n  };\n  const syncOfflinePings = async () => {\n    const offlinePings = JSON.parse(localStorage.getItem('offlinePings') || '[]');\n    if (offlinePings.length === 0) return;\n    try {\n      const {\n        error\n      } = await supabase.from('pings').insert(offlinePings);\n      if (!error) {\n        console.log('Offline pings synced successfully');\n        localStorage.removeItem('offlinePings');\n        loadPings(); // Refresh to show synced pings\n      } else {\n        console.error('Offline sync error:', error);\n      }\n    } catch (error) {\n      console.log('Still offline or sync failed:', error);\n    }\n  };\n  if (!groupCode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(GroupCodeInput, {\n        onGroupSet: handleGroupSet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"snow-icon\",\n          children: \"\\u2744\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), \"SnowPing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(PingControls, {\n        groupCode: groupCode,\n        onPing: handlePing,\n        onLeaveGroup: handleLeaveGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-section\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading pings...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n          pings: pings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wnoQ2dmfIAEx1GAVemWGUNkRRO0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GroupCodeInput","PingControls","MapComponent","supabase","jsxDEV","_jsxDEV","App","_s","groupCode","setGroupCode","pings","setPings","isLoading","setIsLoading","savedGroupCode","localStorage","getItem","loadPings","syncOfflinePings","data","error","from","select","eq","order","ascending","limit","console","handleGroupSet","newGroupCode","setItem","handleLeaveGroup","removeItem","handlePing","ping","insert","saveOfflinePing","alert","offlinePings","JSON","parse","push","stringify","length","log","className","children","onGroupSet","fileName","_jsxFileName","lineNumber","columnNumber","onPing","onLeaveGroup","_c","$RefreshReg$"],"sources":["/Users/jwono/Downloads/snowping-pwa/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport GroupCodeInput from './components/GroupCodeInput'\nimport PingControls from './components/PingControls'\nimport MapComponent from './components/MapComponent'\nimport { supabase } from './supabaseClient'\nimport './App.css'\n\nfunction App() {\n  const [groupCode, setGroupCode] = useState(null)\n  const [pings, setPings] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n\n  // Load saved group code on app start\n  useEffect(() => {\n    const savedGroupCode = localStorage.getItem('snowping_group_code')\n    if (savedGroupCode) {\n      setGroupCode(savedGroupCode)\n    }\n  }, [])\n\n  // Load pings when group code changes\n  useEffect(() => {\n    if (groupCode) {\n      loadPings()\n      syncOfflinePings()\n    }\n  }, [groupCode])\n\n  const loadPings = useCallback(async () => {\n    if (!groupCode) return\n    \n    setIsLoading(true)\n    try {\n      const { data, error } = await supabase\n        .from('pings')\n        .select('*')\n        .eq('group_code', groupCode)\n        .order('timestamp', { ascending: false })\n        .limit(50)\n\n      if (error) {\n        console.error('Error loading pings:', error)\n        return\n      }\n\n      setPings(data || [])\n    } catch (error) {\n      console.error('Error loading pings:', error)\n    } finally {\n      setIsLoading(false)\n    }\n  }, [groupCode])\n\n  const handleGroupSet = (newGroupCode) => {\n    setGroupCode(newGroupCode)\n    localStorage.setItem('snowping_group_code', newGroupCode)\n  }\n\n  const handleLeaveGroup = () => {\n    setGroupCode(null)\n    setPings([])\n    localStorage.removeItem('snowping_group_code')\n  }\n\n  const handlePing = async (ping) => {\n    try {\n      const { error } = await supabase.from('pings').insert([ping])\n\n      if (error) {\n        console.error('Insert error:', error)\n        saveOfflinePing(ping)\n        alert('No connection. Ping saved locally and will sync when online.')\n        return\n      }\n\n      // Refresh pings after successful insert\n      loadPings()\n      alert('Ping sent successfully!')\n    } catch (error) {\n      console.error('Ping error:', error)\n      saveOfflinePing(ping)\n      alert('No connection. Ping saved locally and will sync when online.')\n    }\n  }\n\n  const saveOfflinePing = (ping) => {\n    const offlinePings = JSON.parse(localStorage.getItem('offlinePings') || '[]')\n    offlinePings.push(ping)\n    localStorage.setItem('offlinePings', JSON.stringify(offlinePings))\n  }\n\n  const syncOfflinePings = async () => {\n    const offlinePings = JSON.parse(localStorage.getItem('offlinePings') || '[]')\n    if (offlinePings.length === 0) return\n\n    try {\n      const { error } = await supabase.from('pings').insert(offlinePings)\n      if (!error) {\n        console.log('Offline pings synced successfully')\n        localStorage.removeItem('offlinePings')\n        loadPings() // Refresh to show synced pings\n      } else {\n        console.error('Offline sync error:', error)\n      }\n    } catch (error) {\n      console.log('Still offline or sync failed:', error)\n    }\n  }\n\n  if (!groupCode) {\n    return (\n      <div className=\"App\">\n        <GroupCodeInput onGroupSet={handleGroupSet} />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1 className=\"app-title\">\n          <span className=\"snow-icon\">❄️</span>\n          SnowPing\n        </h1>\n      </header>\n      \n      <main className=\"app-main\">\n        <PingControls \n          groupCode={groupCode}\n          onPing={handlePing}\n          onLeaveGroup={handleLeaveGroup}\n        />\n        \n        <div className=\"map-section\">\n          {isLoading && (\n            <div className=\"loading-overlay\">\n              <div className=\"spinner\"></div>\n              <span>Loading pings...</span>\n            </div>\n          )}\n          <MapComponent pings={pings} />\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}