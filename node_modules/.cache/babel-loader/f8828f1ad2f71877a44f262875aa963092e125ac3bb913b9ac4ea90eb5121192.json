{"ast":null,"code":"import{createClient}from'@supabase/supabase-js';import{mockSupabase}from'./mockSupabase';const supabaseUrl='https://vuxlvyhmzxxufswwxvnm.supabase.co';const supabaseKey='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ1eGx2eWhtenh4dWZzd3d4dm5tIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1ODEyNzcsImV4cCI6MjA3MDE1NzI3N30.KHxwnPVaVZw6by4nGfH3g-yie6VFRWhUwSFAQIxUZwo';// Toggle between real and mock Supabase\nconst USE_MOCK=false;// Set to true for local testing without database\nexport const supabase=USE_MOCK?mockSupabase:createClient(supabaseUrl,supabaseKey);if(USE_MOCK){console.log('ðŸ§ª Using mock Supabase for local testing');}else{console.log('ðŸ”— Using real Supabase database');}","map":{"version":3,"names":["createClient","mockSupabase","supabaseUrl","supabaseKey","USE_MOCK","supabase","console","log"],"sources":["/Users/jwono/Downloads/snowping-pwa/src/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\nimport { mockSupabase } from './mockSupabase'\n\nconst supabaseUrl = 'https://vuxlvyhmzxxufswwxvnm.supabase.co'\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ1eGx2eWhtenh4dWZzd3d4dm5tIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1ODEyNzcsImV4cCI6MjA3MDE1NzI3N30.KHxwnPVaVZw6by4nGfH3g-yie6VFRWhUwSFAQIxUZwo'\n\n// Toggle between real and mock Supabase\nconst USE_MOCK = false // Set to true for local testing without database\n\nexport const supabase = USE_MOCK ? mockSupabase : createClient(supabaseUrl, supabaseKey)\n\nif (USE_MOCK) {\n  console.log('ðŸ§ª Using mock Supabase for local testing')\n} else {\n  console.log('ðŸ”— Using real Supabase database')\n}"],"mappings":"AAAA,OAASA,YAAY,KAAQ,uBAAuB,CACpD,OAASC,YAAY,KAAQ,gBAAgB,CAE7C,KAAM,CAAAC,WAAW,CAAG,0CAA0C,CAC9D,KAAM,CAAAC,WAAW,CAAG,kNAAkN,CAEtO;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAK,CAAC;AAEvB,MAAO,MAAM,CAAAC,QAAQ,CAAGD,QAAQ,CAAGH,YAAY,CAAGD,YAAY,CAACE,WAAW,CAAEC,WAAW,CAAC,CAExF,GAAIC,QAAQ,CAAE,CACZE,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC,CACzD,CAAC,IAAM,CACLD,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}